# Documentation: `https://github.com/PixlOne/logiops/wiki/Configuration`

# Use `sudo logid -v` to find out device information:
#   [INFO] Device found: Wireless Mouse MX Master 3 on /dev/hidraw0:2
#   [DEBUG] /dev/hidraw0:2 remappable buttons:
#   [DEBUG] CID  | reprog? | fn key? | mouse key? | gesture support?
#   [DEBUG] 0x50 |         |         | YES        |                   (left button)
#   [DEBUG] 0x51 |         |         | YES        |                   (right button)
#   [DEBUG] 0x52 | YES     |         | YES        | YES               (middle button)
#   [DEBUG] 0x53 | YES     |         | YES        | YES               (back button)
#   [DEBUG] 0x56 | YES     |         | YES        | YES               (forward button)
#   [DEBUG] 0xc3 | YES     |         | YES        | YES               (gesture button)
#   [DEBUG] 0xc4 | YES     |         | YES        | YES               (toggle smartshift)
#   [DEBUG] 0xd7 | YES     |         |            | YES               (switch receivers)
#   [DEBUG] Thumb wheel detected (0x2150), capabilities:
#   [DEBUG] timestamp | touch | proximity | single tap
#   [DEBUG] YES       | YES   | YES       | YES
#   [DEBUG] Thumb wheel resolution: native (18), diverted (120)

devices: (
{
    # Use `sudo logid -v` to find out the names
    name: "Wireless Mouse MX Master 3";

    # A little slower than a 1000 to make picking a color easier
    dpi: 250;

    # smartshift: {
    #     # Always freespin
    #     on: false;
    #     # threshold: 30;
    #     # default_threshold: 30;
    # };

    # hiresscroll:
    # {
    #     hires: true;
    #     invert: false;
    #     target: false;
    # };

    # thumbwheel:
    # {
        # divert: false;
        # invert: false;
        # left:
        # {
        #     # must reimplement default behaviour
        #     mode: "Axis";
        #     axis: "REL_HWHEEL";
        #     axis_multiplier: -0.5;
        # };
        # right:
        # {
        #     # must reimplement default behaviour
        #     mode: "Axis";
        #     axis: "REL_HWHEEL";
        #     axis_multiplier: 0.5;
        # };
        # tap:
        # {
        #     # Color picker
        #     (I was accidentably triggering the action too often)
        #     type: "Keypress";
        #     keys: ["KEY_LEFTMETA", "KEY_R"];
        # };
    # };


    buttons: (
        # Any button can be customized as a gestures button, this allow us to trigger many actions with a single button. See `https://github.com/PixlOne/logiops/wiki/Configuration#gestures`.
        # Each "cid" code maps to a button. See `https://github.com/PixlOne/logiops/wiki/CIDs`.
        # The "keys" names are defined by the linux kernel. See `https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h`.
        # The actions of type `Keypress` depend on shortcuts defined in the window manager.
        {
            # Remap `Toggle SmartShift`
            cid: 0x00c4;
            action =
            {
                type: "Gestures";
                gestures: (
                    {
                        direction: "None";
                        mode: "OnRelease";
                        action =
                        {
                            # Color picker
                            type: "Keypress";
                            # keys: ["KEY_LEFTMETA", "KEY_LEFTSHIFT", "KEY_S"];
                            keys: ["KEY_LEFTMETA", "KEY_R"];
                        };
                    },
                    # {
                    #     direction: "Up";
                    #     threshold: 20;
                    #     mode: "OnThreshold";
                    #     action =
                    #     {
                    #         type: "Keypress";
                    #         keys: ["KEY_VOLUMEUP"];
                    #     };
                    # },
                    # {
                    #     direction: "Down";
                    #     threshold: 20;
                    #     mode: "OnThreshold";
                    #     action =
                    #     {
                    #         type: "Keypress";
                    #         keys: ["KEY_VOLUMEDOWN"];
                    #     };
                    # },
                    # {
                    #     direction: "Left";
                    #     mode: "OnRelease";
                    #     action =
                    #     {
                    #         type: "Keypress";
                    #         keys: ["KEY_PREVIOUSSONG"];
                    #     };
                    # },
                    # {
                    #     direction: "Right";
                    #     mode: "OnRelease";
                    #     action =
                    #     {
                    #         type: "Keypress";
                    #         keys: ["KEY_NEXTSONG"];
                    #     };
                    # },
                );
            };
        },
        # {
        #     # Remap `Gesture Button`
        #     cid: 0x00c3;
        #     action =
        #     {
        #         type: "Gestures";
        #         gestures: (
        #             {
        #                 direction: "None";
        #                 mode: "OnRelease";
        #                 action =
        #                 {
        #                     # screenshot
        #                     type: "Keypress";
        #                     # keys: ["KEY_LEFTMETA", "KEY_LEFTSHIFT", "KEY_C"];
        #                     keys: ["KEY_LEFTMETA", "KEY_S"];
        #                 };
        #             },
        #             # {
        #             #     direction: "Up";
        #             #     mode: "OnRelease";
        #             #     action =
        #             #     {
        #             #         type: "ChangeHost";
        #             #         host: "next";
        #             #     }
        #             # },
        #         );
        #     };
        # },
    );
}
);
