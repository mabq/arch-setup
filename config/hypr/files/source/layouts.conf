# --- Dwindle
#     https://wiki.hyprland.org/Configuring/Dwindle-Layout/
dwindle {
    # enable pseudotiling. Pseudotiled windows retain their floating size when tiled.
    # pseudotile = false

    # 0 -> split follows mouse,
    # 1 -> always split to the left (new = left or top)
    # 2 -> always split to the right (new = right or bottom)
    force_split = 2

    # if enabled, the split (side/top) will not change regardless of what happens to the container.
    # (must be enabled for `togglesplit` to work)
    preserve_split = true

    # if enabled, allows a more precise control over the window split direction based on the cursor’s position. The window is conceptually divided into four triangles, and cursor’s triangle determines the split direction. This feature also turns on preserve_split.
    # smart_split = false

    # if enabled, resizing direction will be determined by the mouse’s position on the window (nearest to which corner). Else, it is based on the window’s tiling position.
    # smart_resizing = true

    # if enabled, makes the preselect direction persist until either this mode is turned off, another direction is specified, or a non-direction is specified (anything other than l,r,u/t,d/b)
    # permanent_direction_override = false

    # specifies the scale factor of windows on the special workspace [0 - 1]
    # special_scale_factor = 1.0

    # specifies the auto-split width multiplier
    # split_width_multiplier = 1.0

    # whether to prefer the active window or the mouse position for splits
    # use_active_for_splits = true

    # the default split ratio on window open. 1 means even 50/50 split. [0.1 - 1.9]
    # default_split_ratio = 1.0
}

# --- Master
#     https://wiki.hyprland.org/Configuring/Master-Layout/
master {
    # - enable adding additional master windows in a horizontal split style
    # allow_small_split = false

    # - (0.0 - 1.0) the scale of the special workspace windows
    # special_scale_factor = 1

    # - (0.0 - 1.0) master split factor, the ratio of master split
    mfact = 0.50

    # - master: new window becomes master;
    #   slave: new windows are added to slave stack;
    #   inherit: inherit from focused window
    new_status = slave

    # - whether a newly open window should be on the top of the stack
    # new_on_top = false

    # - before, after: place new window relative to the focused window;
    #   none: place new window according to the value of new_on_top.
    # new_on_active = none

    # - whether to apply gaps when there is only one window on a workspace, aka. smart gaps.
    #    0 - disabled
    #    1 - no border
    #    2 - with border
    # no_gaps_when_only = 1

    # - default placement of the master area, can be left, right, top, bottom or center
    # orientation = left

    # - inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout)
    # inherit_fullscreen = true

    # - when using orientation=center, make the master window centered only when at least this many slave windows are open
    # slave_count_for_center_master = false

    # - if enabled, resizing direction will be determined by the mouse’s position on the window (nearest to which corner). Else, it is based on the window’s tiling position
    # smart_resizing = true

    # - when enabled, dragging and dropping windows will put them at the cursor position. Otherwise, when dropped at the stack side, they will go to the top/bottom of the stack depending on new_on_top
    # drop_at_cursor = true
}
